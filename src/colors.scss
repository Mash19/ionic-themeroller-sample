.ion-color-primary {
    --ion-color-base: var(--ion-color-primary, #3880ff);
    --ion-color-base-rgb: var(--ion-color-primary-rgb, 56, 128, 255);
    --ion-color-contrast: var(--ion-color-primary-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-primary-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-primary-shade, #3171e0);
    --ion-color-tint: var(--ion-color-primary-tint, #4c8dff)
}

.ion-color-secondary {
    --ion-color-base: var(--ion-color-secondary, #0cd1e8);
    --ion-color-base-rgb: var(--ion-color-secondary-rgb, 12, 209, 232);
    --ion-color-contrast: var(--ion-color-secondary-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-secondary-shade, #0bb8cc);
    --ion-color-tint: var(--ion-color-secondary-tint, #24d6ea)
}

.ion-color-tertiary {
    --ion-color-base: var(--ion-color-tertiary, #7044ff);
    --ion-color-base-rgb: var(--ion-color-tertiary-rgb, 112, 68, 255);
    --ion-color-contrast: var(--ion-color-tertiary-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-tertiary-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-tertiary-shade, #633ce0);
    --ion-color-tint: var(--ion-color-tertiary-tint, #7e57ff)
}

.ion-color-success {
    --ion-color-base: var(--ion-color-success, #10dc60);
    --ion-color-base-rgb: var(--ion-color-success-rgb, 16, 220, 96);
    --ion-color-contrast: var(--ion-color-success-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-success-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-success-shade, #0ec254);
    --ion-color-tint: var(--ion-color-success-tint, #28e070)
}

.ion-color-warning {
    --ion-color-base: var(--ion-color-warning, #ffce00);
    --ion-color-base-rgb: var(--ion-color-warning-rgb, 255, 206, 0);
    --ion-color-contrast: var(--ion-color-warning-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-warning-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-warning-shade, #e0b500);
    --ion-color-tint: var(--ion-color-warning-tint, #ffd31a)
}

.ion-color-danger {
    --ion-color-base: var(--ion-color-danger, #f04141);
    --ion-color-base-rgb: var(--ion-color-danger-rgb, 240, 65, 65);
    --ion-color-contrast: var(--ion-color-danger-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-danger-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-danger-shade, #d33939);
    --ion-color-tint: var(--ion-color-danger-tint, #f25454)
}

.ion-color-light {
    --ion-color-base: var(--ion-color-light, #f4f5f8);
    --ion-color-base-rgb: var(--ion-color-light-rgb, 244, 245, 248);
    --ion-color-contrast: var(--ion-color-light-contrast, #000);
    --ion-color-contrast-rgb: var(--ion-color-light-contrast-rgb, 0, 0, 0);
    --ion-color-shade: var(--ion-color-light-shade, #d7d8da);
    --ion-color-tint: var(--ion-color-light-tint, #f5f6f9)
}

.ion-color-medium {
    --ion-color-base: var(--ion-color-medium, #989aa2);
    --ion-color-base-rgb: var(--ion-color-medium-rgb, 152, 154, 162);
    --ion-color-contrast: var(--ion-color-medium-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-medium-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-medium-shade, #86888f);
    --ion-color-tint: var(--ion-color-medium-tint, #a2a4ab)
}

.ion-color-dark {
    --ion-color-base: var(--ion-color-dark, #222428);
    --ion-color-base-rgb: var(--ion-color-dark-rgb, 34, 36, 40);
    --ion-color-contrast: var(--ion-color-dark-contrast, #fff);
    --ion-color-contrast-rgb: var(--ion-color-dark-contrast-rgb, 255, 255, 255);
    --ion-color-shade: var(--ion-color-dark-shade, #1e2023);
    --ion-color-tint: var(--ion-color-dark-tint, #383a3e)
}
//root rgb colors for icon color values.
$colorRoles: (primary: 56 128 255,
secondary: 12 209 232,
tertiary: 112 68 255,
success: 16 220 96,
warning: 255 203 0,
danger: 241 61 61,
light: 244 245 248,
meduim: 152 154 162,
dark: 34 36 40);

$light-text-default: hsl(0, 100%, 100%);
$dark-text-default: hsl(0, 100%, 0%);
// For loop inumerator
$num: 0;

// Calculate brightness of a given color.
@function brightness($color) {
    @return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

// Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
@function color-contrast($color, $dark: $dark-text-default, $light: $light-text-default) {
    @if $color==null {
        @return null;
    }

    @else {
        $color-brightness: brightness($color);
        $light-text-brightness: brightness($light);
        $dark-text-brightness: brightness($dark);
        @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
    }
}

:root {

    @each $key,
    $value in $colorRoles {
        $color1: rgb(nth($value, 1), nth($value, 2), nth($value, 3));
        $colorCon: color-contrast($color1);
        --icon-color-#{$key}: #{$color1};
        --icon-color-#{$key}-rgb: #{$value};
        --icon-color-#{$key}-contrast: #{$colorCon};
        --icon-color-#{$key}-shade: #{darken($color1,10%)};
        --icon-color-#{$key}-tint: #{lighten($color1, 10%)};
    }
}
*::selection {
    background: var(--ion-color-shade, rgba(0, 0, 0, 0.3))
}